blueprint:
  name: Motion-Activated Light/Switch
  description: Turns on a light or switch when motion is detected and turns it off after a period of inactivity.
  domain: automation
  input:
    motion_sensors:
      name: Motion Sensors
      description: The motion sensor(s) to trigger the automation.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: true
    target_entity:
      name: Target Light/Switch
      description: The light or switch to control.
      selector:
        entity:
          domain:
            - light
            - switch
    auto_on:
      name: Auto-On
      description: Turn on the target entity when motion is detected.
      selector:
        boolean: {}
      default: true
    timeout:
      name: Timeout (seconds)
      description: Time to wait after the last motion before turning off the target.
      selector:
        number:
          unit_of_measurement: seconds
          min: 1
          max: 3600
          step: 1
      default: 120

trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ auto_on }}"
        sequence:
          - service: "turn_on"
            target:
              entity_id: !input target_entity
  - alias: Reset and Restart Timer
    variables:
      timeout_seconds: !input timeout
    repeat:
      sequence:
        - delay:
            seconds: 1
        - variables:
            active_motions: >-
              {% set motions = expand(motion_sensors) | selectattr('state','eq','on') | list %}
              {{ motions | length > 0 }}
      until:
        - condition: template
          value_template: "{{ not active_motions }}"
        - condition: template
          value_template: "{{ timeout_seconds <= 0 }}"
        - condition: template
          value_template: "{{ timeout_seconds <= 0 and active_motions == false }}"
      - variables:
            timeout_seconds: "{{ timeout_seconds - 1 }}"
  - service: "turn_off"
    target:
      entity_id: !input target_entity